ppx:
  DS: ${mysql.smb_warning}

spring:
  #  main:
  #    allow-bean-definition-overriding: true
  redis:
    host: ${redis.host} # 读取redis公共组配置
    port: ${redis.port}
    password: ${redis.password} # 读取redis公共组配置
#  datasource:
#    druid:
#      warning:
#        connection-properties: config.file=${mysql.business_core}
#        #下面这些参数为固定参数,无需修改
#        filters: config,wall
#        db-type: mysql
#        driver-class-name: com.mysql.cj.jdbc.Driver
#        # 连接池配置
#        initial-size: 1
#        min-idle: 1
#        max-active: 20
#        max-wait: 60000
#        min-evictable-idle-time-millis: 300000
#        validation-query: SELECT 'x'
#        test-while-idle: true
#        test-on-borrow: false
#        test-on-return: false
#        pool-prepared-statements: false
#        max-pool-prepared-statement-per-connection-size: 20
#        filter:
#          stat:
#            enabled: false
#          wall:
#            enabled: true
#        web-stat-filter:
#          enabled: false
#        stat-view-servlet:
#          enabled: false
#        name: business-core
#      jira:
#        connection-properties: config.file=${mysql.business_user}
#        #下面这些参数为固定参数,无需修改
#        filters: config,wall
#        db-type: mysql
#        driver-class-name: com.mysql.cj.jdbc.Driver
#        # 连接池配置
#        initial-size: 1
#        min-idle: 1
#        max-active: 20
#        max-wait: 60000
#        min-evictable-idle-time-millis: 300000
#        validation-query: SELECT 'x'
#        test-while-idle: true
#        test-on-borrow: false
#        test-on-return: false
#        pool-prepared-statements: false
#        max-pool-prepared-statement-per-connection-size: 20
#        filter:
#          config:
#            enabled: true
#          stat:
#            enabled: false
#          wall:
#            enabled: true
#        web-stat-filter:
#          enabled: false
#        stat-view-servlet:
#          enabled: false
# dubbo配置
dubbo:
  application:
    name: smb-warning
    owner: tzx
  config-center:
    address: zookeeper://${middleware.zk.address}
    group: coordination
  protocol:
    port: 20881
  consumer:
    check: false
  provider:
    #    去除默认异常,使用B2B生成的异常过滤器
    filter: -exception
  logByCode: true

job:
  executor:
    app-name: ${ppx.name}
    logRetentionDays: ${job.fm.executor.log-retention-days}
  accessToken: ${job.fm.access-token}
  admin:
    addresses: ${job.fm.admin.addresses}
